{"title":"Usage","markdown":{"yaml":{"listing":[{"id":"Definitions","contents":["_crossrefs/def.yml","_crossrefs"],"type":"table","sort":false,"fields":["title","link"]}]},"headingText":"Usage","containsRefs":false,"markdown":"\n\nThis filter is intended for Quarto book projects, though it could be used in any website project. \n\n## Project configuration\n\n### Method 1\n\nIf you installed the Python packages as described in @sec-install, then this is the preferred method. \n\nIn the `_quarto.yml` file, include the following:\n\n```markdown\nproject:\n  type: book\n  pre-render: find_crossrefs.py\n```\n::: {.callout-note}\nIf you use Quarto in preview mode, it will incrementally render only pages that have changed, and it will not run the pre-render script when doing so. So the crossref tables will not change while editing in preview mode. After exiting preview, run `quarto render` to get the information updated.\n:::\n\n### Method 2\n\nThe chief advantage of this method is that it has no dependencies beyond the Quarto installation.\n\nIn the `_quarto.yml` file, include the following:\n\n```markdown\nproject:\n  type: book\n  post-render: concatenate.ts\n\nfilters:\n  - crossref-listings\n```\n\nThe filter dumps all of the cross-references into separate files for each page as the project is rendered. These are concatenated together by the post-render script. As in LaTeX, this causes the cross-reference information to lag behind the rendering.\n\n::: {.callout-important}\nThe project has to be fully rendered a second time in order for the updated crossref information to be loaded for display.\n:::\n\n::: {.callout-note}\nI don't know a way to control the page order in which the crossrefs will be assembled. That's because each page is its own world inside the filter. Nor can you simply sort on the link name, because \"Example 1.10\" will come before \"Example 1.2\". A workaround is to add a chapter number to the attributes for sorting; within each chapter, the ordering should be correct, as the listing sort algorithm appears to be a stable one.\n:::\n\n::: {.callout-tip}\nIf things get into a hopeless state, it's okay to wipe everything in the `_crossrefs` directory and render twice from scratch.\n:::\n\n::: {.callout-note}\nIf you use Quarto in preview mode, it will incrementally render only pages that have changed. Unfortunately,only the rendered pages will be captured in the cross-reference tables. So you should ignore how the tables look while editing in preview, then run `quarto render` twice to get the information restored.\n:::\n\n## Crossref types\n\nThe listing mechanism works for definitions, theorems, and similar divs. \n\n:::{#def-definition title=\"Theorem-like divs\" type=bar}\nA **theorem-like div** is a cross-referenceable named block in a Quarto document, as listed in [the Quarto guide](https://quarto.org/docs/authoring/cross-references.html#theorems-and-proofs).\n:::\n\n## Custom fields \n\nYou can put as many attributes as you like, including zero, in the header line defining the example div. These create custom fields that can be included as columns in the crossref table. Quarto otherwise ignores them. \n\n\n::::{#exm-usage-fields description=\"Custom fields\" type=Code}\n@exm-example1 was created with the following code:\n\n```markdown\n::::{#exm-example1 description=\"A fine example\" type=Code}\n## Good example\nThis is example 1.\n::::\n```\n::::\n\n::: {.callout-tip}\nThe crossref attributes will be in the HTML as classes, so you can target them with CSS if you like. \n:::\n\n## Creating a listing\n\nThe tables of cross references  are created using the (listing)[https://quarto.org/docs/websites/website-listings.html] mechanism of Quarto websites. All the extension does is to collect the relevant information in files in the `_crossrefs` subdirectory. You just include the one you want in the `contents` metadata of `listing`.\n\n::::{#exm-usage-create description=\"Creating a listing\" type=Metadata}\nTo create the definition table below, the following was put into the metadata of this file:\n\n```markdown\nlisting:\n  - id: Definitions\n    contents: \n      - _crossrefs/def.yml\n      - _crossrefs\n    type: table\n    fields: [title, link]\n```\nThen, at the place where the table is to appear, we put \n```markdown\n:::{#Definitions}\n:::\n```\n:::{#Definitions}\n:::\n::::\n\n::: {.callout-important}\nThe inclusion of `_crossrefs` in the `contents` property above seems superfluous, but the Quarto listing mechanism seems to ignore a file of listing info unless it also has a directory to scan.\n:::\n\n## Customizing the appearance\n\nThe cross-reference tables are created using the [listings](https://quarto.org/docs/websites/website-listings.html) mechanism of Quarto websites and can be extensively customized in exactly the same way.\n\n::::{#exm-other description=\"On another page\" type=ignore}\nA pointless non-example.\n::::\n","srcMarkdownNoYaml":"\n# Usage\n\nThis filter is intended for Quarto book projects, though it could be used in any website project. \n\n## Project configuration\n\n### Method 1\n\nIf you installed the Python packages as described in @sec-install, then this is the preferred method. \n\nIn the `_quarto.yml` file, include the following:\n\n```markdown\nproject:\n  type: book\n  pre-render: find_crossrefs.py\n```\n::: {.callout-note}\nIf you use Quarto in preview mode, it will incrementally render only pages that have changed, and it will not run the pre-render script when doing so. So the crossref tables will not change while editing in preview mode. After exiting preview, run `quarto render` to get the information updated.\n:::\n\n### Method 2\n\nThe chief advantage of this method is that it has no dependencies beyond the Quarto installation.\n\nIn the `_quarto.yml` file, include the following:\n\n```markdown\nproject:\n  type: book\n  post-render: concatenate.ts\n\nfilters:\n  - crossref-listings\n```\n\nThe filter dumps all of the cross-references into separate files for each page as the project is rendered. These are concatenated together by the post-render script. As in LaTeX, this causes the cross-reference information to lag behind the rendering.\n\n::: {.callout-important}\nThe project has to be fully rendered a second time in order for the updated crossref information to be loaded for display.\n:::\n\n::: {.callout-note}\nI don't know a way to control the page order in which the crossrefs will be assembled. That's because each page is its own world inside the filter. Nor can you simply sort on the link name, because \"Example 1.10\" will come before \"Example 1.2\". A workaround is to add a chapter number to the attributes for sorting; within each chapter, the ordering should be correct, as the listing sort algorithm appears to be a stable one.\n:::\n\n::: {.callout-tip}\nIf things get into a hopeless state, it's okay to wipe everything in the `_crossrefs` directory and render twice from scratch.\n:::\n\n::: {.callout-note}\nIf you use Quarto in preview mode, it will incrementally render only pages that have changed. Unfortunately,only the rendered pages will be captured in the cross-reference tables. So you should ignore how the tables look while editing in preview, then run `quarto render` twice to get the information restored.\n:::\n\n## Crossref types\n\nThe listing mechanism works for definitions, theorems, and similar divs. \n\n:::{#def-definition title=\"Theorem-like divs\" type=bar}\nA **theorem-like div** is a cross-referenceable named block in a Quarto document, as listed in [the Quarto guide](https://quarto.org/docs/authoring/cross-references.html#theorems-and-proofs).\n:::\n\n## Custom fields \n\nYou can put as many attributes as you like, including zero, in the header line defining the example div. These create custom fields that can be included as columns in the crossref table. Quarto otherwise ignores them. \n\n\n::::{#exm-usage-fields description=\"Custom fields\" type=Code}\n@exm-example1 was created with the following code:\n\n```markdown\n::::{#exm-example1 description=\"A fine example\" type=Code}\n## Good example\nThis is example 1.\n::::\n```\n::::\n\n::: {.callout-tip}\nThe crossref attributes will be in the HTML as classes, so you can target them with CSS if you like. \n:::\n\n## Creating a listing\n\nThe tables of cross references  are created using the (listing)[https://quarto.org/docs/websites/website-listings.html] mechanism of Quarto websites. All the extension does is to collect the relevant information in files in the `_crossrefs` subdirectory. You just include the one you want in the `contents` metadata of `listing`.\n\n::::{#exm-usage-create description=\"Creating a listing\" type=Metadata}\nTo create the definition table below, the following was put into the metadata of this file:\n\n```markdown\nlisting:\n  - id: Definitions\n    contents: \n      - _crossrefs/def.yml\n      - _crossrefs\n    type: table\n    fields: [title, link]\n```\nThen, at the place where the table is to appear, we put \n```markdown\n:::{#Definitions}\n:::\n```\n:::{#Definitions}\n:::\n::::\n\n::: {.callout-important}\nThe inclusion of `_crossrefs` in the `contents` property above seems superfluous, but the Quarto listing mechanism seems to ignore a file of listing info unless it also has a directory to scan.\n:::\n\n## Customizing the appearance\n\nThe cross-reference tables are created using the [listings](https://quarto.org/docs/websites/website-listings.html) mechanism of Quarto websites and can be extensively customized in exactly the same way.\n\n::::{#exm-other description=\"On another page\" type=ignore}\nA pointless non-example.\n::::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["crossref-listings"],"output-file":"usage.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Archive","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.114","listing":[{"id":"Definitions","contents":["_crossrefs/def.yml","_crossrefs"],"type":"table","sort":false,"fields":["title","link"]}]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}